; conway.mmp - Conway's Game of Life
; ===== Entry ====

; Draw a glider
&1      0x4881
&1      0x48A2
&1      0x48C0
&1      0x48C1
&1      0x48C2

; BufferA and BufferB are the actual buffers, while TopBuffer and BottomBuffer are pointers
; Previous cells are read from BottomBuffer and new cells are written to TopBuffer
&BufferA        TopBuffer
&BufferB        BottomBuffer



; ===== Main loop =====
@ MainLoopEnter
@ MainLoop
    ; Perform cell calculations from BottomBuffer to TopBuffer
    &CalcLoopEnter      Step
    @ CalcLoopReturn


    ; Render TopBuffer to Matrix


    ; Swap top/bottom buffers
    TopBuffer           SwapBuffer
    BottomBuffer        TopBuffer
    SwapBuffer          BottomBuffer

    &MainLoop           Step

; Halt
&1      ClockMode



; ===== Calculation loop =====
@ CalcLoopEnter
    &0          CalcLoopIter

@ CalcLoop
    ; Count neighbors
    

    ; Determine cell value

    ; Increment CalcLoopIter
    CalcLoopIter        ALU.A
    &1                  ALU.B
    ALU.SUM             CalcLoopIter

    ; Check CalcLoopIter
    CalcLoopIter        ALU.A
    CalcLoopCount       ALU.B
    ALU.GTE             ALU.A

    &CalcLoopContinue   ALU.B
    ALU.SUM             Step
    
@ CalcLoopContinue
    &CalcLoop           Step
@ CalcLoopBreak
    &CalcLoopReturn     Step



; ===== Global tags =====

& CalcLoopCount   = 1024    ; 32 * 32 = 1024
& RenderLoopCount = 1024

$ ReturnPoint       0x4000
$ CalcLoopIter      0x4001
$ RenderLoopIter    0x4002

$ TopBuffer         0x4003
$ BottomBuffer      0x4004
$ SwapBuffer        0x4005

$ BufferA           0x4400
$ BufferB           0x4800
